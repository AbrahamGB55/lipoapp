import streamlit as st
import pandas as pd
import plotly.graph_objects as go
import numpy as np

# Configuraci√≥n de la p√°gina
st.set_page_config(
    page_title="Calculadora de P√©rdida Permisible de Grasa en Liposucci√≥n",
    page_icon="üè•",
    layout="wide"
)

# T√≠tulo principal
st.title("üè• Calculadora de P√©rdida Permisible de Grasa en Liposucci√≥n")
st.markdown("### Basada en: Manzaneda Cipriani R. et al. (2021)")
st.markdown("*Cir. pl√°st. iberolatinoam. Vol. 47 - N¬∫ 1*")

# Informaci√≥n del estudio
with st.expander("üìä Informaci√≥n del estudio original"):
    st.info("""
    **Poblaci√≥n del estudio:**
    - 102 pacientes (97 mujeres, 5 hombres)
    - Edad promedio: 32.5 a√±os (rango 18-54)
    - IMC promedio: 22.06
    - Infiltraci√≥n superh√∫meda (relaci√≥n 1:1)
    - Hemoglobina postoperatoria objetivo: 10 ¬± 0.5 g/dl
    
    **Poder predictivo de los modelos:**
    - Modelo simple: R¬≤ = 47%
    - Modelo con edad: R¬≤ = 49%
    """)

# Crear columnas para el layout
col1, col2 = st.columns(2)

with col1:
    st.header("üìã Datos del Paciente")
    
    # Inputs del paciente
    peso = st.number_input("Peso (kg)", min_value=40.0, max_value=200.0, value=70.0, step=0.5,
                          help="Peso del paciente en kilogramos")
    
    altura = st.number_input("Altura (cm)", min_value=140.0, max_value=220.0, value=170.0, step=1.0,
                            help="Altura del paciente en cent√≠metros")
    
    genero = st.selectbox("G√©nero", ["Masculino", "Femenino"])
    
    edad = st.number_input("Edad (a√±os)", min_value=18, max_value=70, value=30, step=1,
                          help="En el estudio original: 18-54 a√±os")
    
    hb_actual = st.number_input("Hemoglobina actual (g/dl)", min_value=10.0, max_value=20.0, value=13.0, step=0.1,
                               help="Hemoglobina preoperatoria del paciente")
    
    hb_minima = st.number_input("Hemoglobina m√≠nima aceptable (g/dl)", min_value=7.0, max_value=12.0, value=10.0, step=0.1,
                               help="El estudio utiliz√≥ 10 g/dl como est√°ndar de seguridad")
    
    # Calcular IMC
    imc = peso / ((altura/100) ** 2)
    st.metric("IMC", f"{imc:.2f} kg/m¬≤", 
              delta=f"{imc - 22.06:.2f} vs promedio del estudio")

with col2:
    st.header("ü©∏ C√°lculo del Volumen Sangu√≠neo")
    
    # C√°lculo del volumen sangu√≠neo seg√∫n Nadler
    if genero == "Masculino":
        # F√≥rmula exacta del paper
        vol_sang_nadler = (0.006012 * (altura ** 3)) / (14.6 * peso) + 604
        vol_sang_simple = peso * 75
    else:
        # F√≥rmula exacta del paper
        vol_sang_nadler = (0.005835 * (altura ** 3)) / (15 * peso) + 183
        vol_sang_simple = peso * 65
    
    # Mostrar ambos m√©todos de c√°lculo
    st.metric("Volumen sangu√≠neo (Ecuaci√≥n de Nadler)", f"{vol_sang_nadler:.1f} ml",
             help="M√©todo m√°s preciso seg√∫n el paper")
    st.metric("Volumen sangu√≠neo (M√©todo simplificado)", f"{vol_sang_simple:.1f} ml",
             help="Hombres: 75 ml/kg, Mujeres: 65 ml/kg")
    
    # Permitir al usuario elegir qu√© m√©todo usar
    metodo_vol = st.radio("Seleccione m√©todo de c√°lculo:", 
                         ["Ecuaci√≥n de Nadler (recomendado)", "M√©todo simplificado"])
    
    if metodo_vol == "Ecuaci√≥n de Nadler (recomendado)":
        vol_sanguineo = vol_sang_nadler
    else:
        vol_sanguineo = vol_sang_simple

# Separador
st.markdown("---")

# C√°lculos principales
st.header("üìä Resultados de P√©rdida Permisible de Grasa")

# Calcular p√©rdida permisible de sangre (MPSA) - F√≥rmula correcta del paper
mpsa = (hb_actual - hb_minima) * peso * vol_sanguineo

# Mostrar c√°lculo detallado
with st.expander("üßÆ Ver c√°lculo detallado de MPSA"):
    st.latex(r"MPSA = (Hb_{actual} - Hb_{m√≠nima}) \times Peso \times Volumen_{sangu√≠neo}")
    st.write(f"MPSA = ({hb_actual} - {hb_minima}) √ó {peso} √ó {vol_sanguineo:.1f}")
    st.write(f"MPSA = {mpsa:.1f} ml")

# Modelo predictivo simple (R¬≤ = 47%)
vol_grasa_simple = 3.4356 * mpsa + 61.269

# Modelo predictivo m√∫ltiple con edad (R¬≤ = 49%)
vol_grasa_multiple = 383.725 + 3.406 * mpsa - 29.116 * edad

# Crear columnas para mostrar resultados
res_col1, res_col2, res_col3 = st.columns(3)

with res_col1:
    st.metric("P√©rdida Permisible de Sangre (MPSA)", f"{mpsa:.0f} ml", 
              help="M√°xima p√©rdida sangu√≠nea para llegar a Hb m√≠nima")

with res_col2:
    st.metric("Volumen de Grasa - Modelo Simple", f"{vol_grasa_simple:.0f} ml",
              help="Y = 3.4356 √ó MPSA + 61.269 (R¬≤ = 47%)")

with res_col3:
    st.metric("Volumen de Grasa - Modelo con Edad", f"{vol_grasa_multiple:.0f} ml",
              help="Y‚ÇÇ = 383.725 + 3.406 √ó MPSA - 29.116 √ó edad (R¬≤ = 49%)", 
              delta=f"{vol_grasa_multiple - vol_grasa_simple:.0f} ml diferencia")

# Advertencia si el volumen es mayor a 5000cc
if vol_grasa_multiple > 5000:
    st.warning("‚ö†Ô∏è **Atenci√≥n**: Volumen > 5000 cc. Se recomienda realizar el procedimiento en centro con UCI disponible.")

# Gr√°fico comparativo
st.markdown("---")
st.header("üìà Visualizaci√≥n de Resultados")

# Crear dos columnas para gr√°ficos
graf_col1, graf_col2 = st.columns(2)

with graf_col1:
    # Gr√°fico de barras
    fig_bar = go.Figure()
    
    categorias = ['P√©rdida Sangre\n(MPSA)', 'Grasa\n(Modelo Simple)', 'Grasa\n(Modelo con Edad)']
    valores = [mpsa, vol_grasa_simple, vol_grasa_multiple]
    colores = ['#ff4b4b', '#4b9bff', '#4bff4b']
    
    fig_bar.add_trace(go.Bar(
        x=categorias,
        y=valores,
        text=[f'{v:.0f} ml' for v in valores],
        textposition='auto',
        marker_color=colores
    ))
    
    fig_bar.update_layout(
        title="Comparaci√≥n de Vol√∫menes Calculados",
        yaxis_title="Volumen (ml)",
        showlegend=False,
        height=400
    )
    
    st.plotly_chart(fig_bar, use_container_width=True)

with graf_col2:
    # Gr√°fico de la relaci√≥n lineal (como en el paper)
    mpsa_range = np.linspace(0, 2500, 100)
    grasa_simple = 3.4356 * mpsa_range + 61.269
    
    fig_scatter = go.Figure()
    
    # L√≠nea de regresi√≥n
    fig_scatter.add_trace(go.Scatter(
        x=mpsa_range,
        y=grasa_simple,
        mode='lines',
        name='Modelo de regresi√≥n',
        line=dict(color='blue', width=2)
    ))
    
    # Punto actual
    fig_scatter.add_trace(go.Scatter(
        x=[mpsa],
        y=[vol_grasa_simple],
        mode='markers',
        name='Paciente actual',
        marker=dict(color='red', size=12)
    ))
    
    fig_scatter.update_layout(
        title="Relaci√≥n MPSA vs Volumen de Grasa<br>(y = 3.4356x + 61.269)",
        xaxis_title="P√©rdida permisible de sangre (ml)",
        yaxis_title="Volumen aspirado de grasa (ml)",
        height=400,
        showlegend=True
    )
    
    st.plotly_chart(fig_scatter, use_container_width=True)

# Calculadora de fluidos de Rohrich
st.markdown("---")
st.header("üíß Manejo de Fluidos Intraoperatorios (Rohrich et al.)")

fluid_col1, fluid_col2 = st.columns(2)

with fluid_col1:
    st.subheader("Datos de la cirug√≠a")
    vol_aspirado = st.number_input("Volumen aspirado total (ml)", 
                                   min_value=0, max_value=10000, value=int(vol_grasa_multiple), step=100,
                                   help="Volumen total aspirado durante la liposucci√≥n")
    
    vol_infiltrado = st.number_input("Volumen infiltrado (ml)", 
                                     min_value=0, max_value=20000, value=int(vol_aspirado), step=100,
                                     help="T√©cnica superh√∫meda: relaci√≥n 1:1")
    
    vol_iv = st.number_input("Volumen IV administrado (ml)", 
                             min_value=0, max_value=10000, value=1500, step=100,
                             help="Volumen de fluidos intravenosos")

with fluid_col2:
    st.subheader("An√°lisis del ratio de fluidos")
    
    if vol_aspirado > 0:
        # Calcular ratio seg√∫n f√≥rmula del paper
        ratio_actual = (vol_iv + vol_infiltrado) / vol_aspirado
        
        # Determinar ratio recomendado seg√∫n volumen
        if vol_aspirado <= 5000:
            ratio_recomendado = 1.8
            st.info("üìå Aspirado ‚â§ 5000 ml ‚Üí Ratio recomendado: 1.8")
        else:
            ratio_recomendado = 1.2
            st.info("üìå Aspirado > 5000 ml ‚Üí Ratio recomendado: 1.2")
        
        # Mostrar m√©tricas
        st.metric("Ratio actual", f"{ratio_actual:.2f}")
        
        # Evaluar el ratio
        if ratio_actual < ratio_recomendado * 0.9:
            st.error(f"‚ö†Ô∏è Ratio insuficiente. Aumentar fluidos IV en ~{int((ratio_recomendado - ratio_actual) * vol_aspirado)} ml")
        elif ratio_actual > ratio_recomendado * 1.1:
            st.warning("‚ö†Ô∏è Ratio elevado. Riesgo de sobrecarga h√≠drica.")
        else:
            st.success("‚úÖ Ratio de fluidos dentro del rango adecuado.")
        
        # Mostrar f√≥rmula
        with st.expander("Ver f√≥rmula del ratio"):
            st.latex(r"Ratio = \frac{Volumen_{IV} + Volumen_{infiltrado}}{Volumen_{aspirado}}")

# Informaci√≥n adicional
st.markdown("---")
st.header("üìù Informaci√≥n Importante")

col_info1, col_info2 = st.columns(2)

with col_info1:
    with st.expander("üìê F√≥rmulas matem√°ticas utilizadas"):
        st.markdown("""
        ### 1. Volumen sangu√≠neo (Ecuaci√≥n de Nadler):
        **Hombres:**
        ```
        VS = (0.006012 √ó altura¬≥) / (14.6 √ó peso) + 604
        ```
        **Mujeres:**
        ```
        VS = (0.005835 √ó altura¬≥) / (15 √ó peso) + 183
        ```
        
        ### 2. P√©rdida Permisible de Sangre (MPSA):
        ```
        MPSA = (Hb actual - Hb m√≠nima) √ó peso √ó volumen sangu√≠neo
        ```
        
        ### 3. Modelo predictivo simple (R¬≤ = 0.47):
        ```
        Volumen grasa = 3.4356 √ó MPSA + 61.269
        ```
        
        ### 4. Modelo predictivo m√∫ltiple (R¬≤ = 0.49):
        ```
        Volumen grasa = 383.725 + 3.406 √ó MPSA - 29.116 √ó edad
        ```
        """)

with col_info2:
    with st.expander("‚ö†Ô∏è Consideraciones cl√≠nicas"):
        st.warning("""
        **IMPORTANTE:**
        - Esta calculadora es una herramienta de apoyo basada en evidencia cient√≠fica
        - No reemplaza el juicio cl√≠nico individualizado
        - Basada en t√©cnica de infiltraci√≥n superh√∫meda (1:1)
        - Hemoglobina objetivo postoperatoria: 10 g/dl
        - Para vol√∫menes > 5000 ml: requiere centro con UCI
        - Considerar comorbilidades del paciente
        - Monitoreo continuo de signos vitales
        - El estudio original excluy√≥ procedimientos combinados
        """)

# Footer con referencia completa
st.markdown("---")
st.caption("""
**Referencia:** Manzaneda Cipriani R., Cano Guerra F.D., Adrianzen N√∫√±ez G.A. 
'P√©rdida permisible de grasa en liposucci√≥n: f√≥rmula y aplicaci√≥n inform√°tica para cuantificar un nuevo concepto'. 
Cir. pl√°st. iberolatinoam. 2021;47(1):19-28. DOI: 10.4321/S0376-78922021000100004
""")

# Sidebar con informaci√≥n adicional
st.sidebar.header("‚ÑπÔ∏è Acerca de esta calculadora")
st.sidebar.info("""
Esta aplicaci√≥n implementa las f√≥rmulas publicadas en el estudio de Manzaneda Cipriani et al. (2021), 
que desarroll√≥ un modelo predictivo para calcular la p√©rdida permisible de grasa en liposucci√≥n 
bas√°ndose en par√°metros hemodin√°micos seguros.
""")

st.sidebar.markdown("### üéØ Caracter√≠sticas del estudio:")
st.sidebar.markdown("""
- 102 pacientes (97 mujeres, 5 hombres)
- Edad: 18-54 a√±os
- IMC promedio: 22.06
- T√©cnica: Infiltraci√≥n superh√∫meda
- Sin complicaciones mayores
- Hb postoperatoria objetivo: 10 g/dl
""")
